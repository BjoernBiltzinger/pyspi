name: Docs Custom
on: [push, release]

jobs:
  notebooks:
    name: "Build the notebooks for the docs"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Cache data folder
        uses: actions/cache@v2
        id: cache-data-folder
        with:
          path: ~/data
          key: data

      - name: Download data folder
        env:
          CACHE_HIT: ${{steps.cache-data-folder.outputs.cache-hit}}
        run: |
          echo "Getting data folder"
          if [[ "$CACHE_HIT" == 'true' ]]; then

          echo "data folder already in cache. using this."

          else
          echo "Download zip data folder."
          wget https://grb.mpe.mpg.de/pyspi_datafolder
          mv pyspi_datafolder ~/data.zip
          unzip -o ~/data.zip -d ~/
          fi

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          pip install black
          pip install --upgrade numpy ipython jupyter matplotlib
          pip install jupytext jupyterthemes emcee
          pip install -r requirements.txt
          pip install Cython
          pip install ultranest
          python setup.py develop

      - name: Execute the notebooks
        shell: bash -l {0}
        env:
          PYSPI: /home/runner/PySPI_data
          PYSPI_PACKAGE_DATA: /home/runner/data
        run: |
          mkdir /home/runner/PySPI_data
          jupytext --to ipynb --execute docs/md_docs/*.md
          mv docs/md_docs/*.ipynb docs/notebooks/
          ls docs/notebooks

      - uses: actions/upload-artifact@v2
        with:
          name: notebooks-for-${{ github.sha }}
          path: docs/notebooks

      # - name: Sleep for 1 minutes
      #   uses: jakejarvis/wait-action@master
      #   with:
      #     time: '1m'

      # - name: Trigger RTDs build
      #   uses: dfm/rtds-action@v1
      #   with:
      #     webhook_url: ${{ secrets.RTDS_WEBHOOK_URL }}
      #     webhook_token: ${{ secrets.RTDS_WEBHOOK_TOKEN }}
      #     commit_ref: ${{ github.ref }}
  api_doc:
    name: "Create the API stubs"
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8        

      - name: Build the API doc
        run: |

          pip3 install cython
          pip3 install numpy scipy numba astropy
          pip3 install astromodels
          pip3 install threeml
          python setup.py develop

          brew install sphinx-doc pandoc

          pip3 install wheel
          pip3 install mock recommonmark
          pip3 install sphinx_rtd_theme
          pip3 install -U sphinx nbsphinx sphinx-gallery
          
          
          sphinx-apidoc -f -o docs/api/ pyspi


      - uses: actions/upload-artifact@v2
        with:
          name: api-stubs-for-${{ github.sha }}
          path: docs/api

          
  build_docs:
    name: "Build the Documentation"
    runs-on: macos-latest
    needs: [notebooks, api_doc]
    steps:


      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8        

      - name: Install twopc
        run: |

          pip3 install numpy scipy numba astropy
          pip3 install astromodels
          pip3 install threeml
          brew install sphinx-doc pandoc

          pip3 install wheel
          pip3 install mock recommonmark
          pip3 install sphinx_rtd_theme
          pip3 install -U sphinx nbsphinx sphinx-gallery
          
          python3 setup.py develop

      - uses: actions/download-artifact@master
        with:
          name: notebooks-for-${{ github.sha }}
          path: docs/notebooks


      - uses: actions/download-artifact@master
        with:
          name: api-stubs-for-${{ github.sha }}
          path: docs/notebooks/api

      
      - name: Build and Commit
        uses: sphinx-notes/pages@master
        with:
          documentation_path: docs
        
      - name: Push changes
#        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
